{"version":3,"sources":["store/notes/actionTypes.js","store/notes/actions.js","components/AddNoteForm.jsx","store/notes/selectors.js","components/NotePage.jsx","components/Main.jsx","components/NoteItem.jsx","components/NoteList.jsx","components/Sidebar.jsx","App.js","store/notes/notesReducer.js","store/rootReducer.js","store/store.js","index.js"],"names":["ADD_NOTE","SET_SELECTED","SET_NOTES","DELETE_NOTE","SHOW_EDIT_FORM","SHOW_ADD_FORM","showEdit","payload","type","setSelected","selected","updateNote","updatedItem","dispatch","getState","notes","setNotes","map","note","id","AddNoteForm","useState","name","setName","text","setText","useDispatch","className","value","onChange","e","target","placeholder","rows","onClick","noteObj","Date","now","disabled","selectNotes","state","selectNoteItems","createSelector","selectSelected","selectEditMode","showAddForm","editMode","NotePage","useSelector","useEffect","updated","Main","isSelected","Object","keys","length","NoteItem","handleDelete","noteId","deleteItem","handleSelect","NoteList","Sidebar","App","initialState","combineReducers","action","filter","item","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.232ab82e.chunk.js","sourcesContent":["export const ADD_NOTE = \"notes/ADD_NOTE\"\r\nexport const SET_SELECTED = \"notes/SET_SELECTED\"\r\nexport const SET_NOTES = \"notes/SET_NOTES\"\r\nexport const DELETE_NOTE = \"notes/DELETE_NOTE\"\r\nexport const SHOW_EDIT_FORM = \"notes/SHOW_EDIT_FORM\"\r\nexport const SHOW_ADD_FORM = \"notes/SHOW_ADD_FORM\"","import { ADD_NOTE, DELETE_NOTE, SET_NOTES, SET_SELECTED, SHOW_ADD_FORM, SHOW_EDIT_FORM } from './actionTypes'\r\n\r\n\r\nexport function showEdit(payload) {\r\n    return {\r\n        type: SHOW_EDIT_FORM,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function showAddFrom(payload) {\r\n    return {\r\n        type: SHOW_ADD_FORM,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function setNotes(notes) {\r\n    return {\r\n        type: SET_NOTES,\r\n        notes\r\n    }\r\n}\r\n\r\nexport function addNote(note) {\r\n    return {\r\n        type: ADD_NOTE,\r\n        note\r\n    } \r\n}\r\n\r\nexport function setSelected(selected) {\r\n    return {\r\n        type: SET_SELECTED,\r\n        selected\r\n    }\r\n}\r\n\r\nexport function deleteItem(noteId) {\r\n    return {\r\n        type: DELETE_NOTE,\r\n        noteId\r\n    }\r\n}\r\n\r\n\r\nexport function updateNote(updatedItem) {\r\n    return (dispatch, getState) => {\r\n        const {notes} = getState()\r\n        \r\n        const newItems = notes.notes.map(note => {\r\n            if(note.id === updatedItem.id) {\r\n                return updatedItem\r\n            }\r\n            return note\r\n        })\r\n        dispatch(setNotes(newItems))\r\n        dispatch(setSelected(updatedItem))\r\n        dispatch(showEdit(false))\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport { useDispatch} from 'react-redux'\r\nimport { addNote} from '../store/notes/actions'\r\n\r\nexport const AddNoteForm = () => {\r\n    const [name, setName] = useState('')\r\n    const [text, setText] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addNoteHandler = () => {\r\n        if(name, text) {\r\n            const noteObj = {\r\n                id: Date.now(),\r\n                name, \r\n                text\r\n           }\r\n            dispatch(addNote(noteObj))\r\n            setName('')\r\n            setText('')\r\n       }\r\n    }\r\n\r\n    return (\r\n        <div className=\"addNoteForm form\">\r\n            <h2>Добавить заметку</h2>\r\n            <input\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                placeholder=\"Введите имя заметки\"\r\n            />\r\n            <textarea\r\n                value={text}\r\n                onChange={(e) => setText(e.target.value)}\r\n                rows=\"10\"\r\n                placeholder=\"Введите текст заметки\"\r\n            />\r\n            <button className=\"btn\" onClick={addNoteHandler} disabled={!name}>\r\n                Добавить\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import { createSelector } from 'reselect';\r\n\r\n\r\nexport const selectNotes = (state) => state.notes\r\n\r\nexport const selectNoteItems = createSelector(selectNotes, notes => notes.notes)\r\nexport const selectSelected = createSelector(selectNotes, notes => notes.selected)\r\nexport const selectShowAddForm = createSelector(selectNotes, notes => notes.showAddForm)\r\nexport const selectEditMode = createSelector(selectNotes, notes => notes.editMode)\r\n\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FaRegEdit } from 'react-icons/fa';\r\nimport { showEdit, updateNote } from '../store/notes/actions';\r\nimport { selectEditMode, selectSelected } from '../store/notes/selectors';\r\n\r\n\r\nexport const NotePage = () => {\r\n    const dispatch = useDispatch()\r\n    const editMode = useSelector(selectEditMode)\r\n    const selected = useSelector(selectSelected)\r\n    const [name, setName] = useState('');\r\n    const [text, setText] = useState('');\r\n\r\n\r\n    useEffect(() => {\r\n        setName(selected.name)\r\n        setText(selected.text)\r\n    }, [selected]);\r\n\r\n\r\n    const editNote = () => {\r\n        const updated = {\r\n            ...selected,\r\n            name, \r\n            text\r\n        }\r\n\r\n        dispatch(updateNote(updated))\r\n    }\r\n\r\n    return (\r\n        <div className=\"note\">\r\n            { !editMode ? \r\n                <>\r\n                    <h1 className={'noteTitle'}># {selected.name} <span onClick={() => dispatch(showEdit(true))}><FaRegEdit /></span></h1>\r\n                    <div className=\"noteText\">\r\n                        {selected.text}\r\n                    </div>\r\n                </> :\r\n                <>\r\n                    <h1 className={'noteTitle'}>Редактировать</h1>\r\n                    <div className=\"form\">\r\n                        <input\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                        <textarea\r\n                            value={text}\r\n                            onChange={(e) => setText(e.target.value)}\r\n                            rows=\"10\"\r\n                        />\r\n                        <button className=\"btn\" onClick={editNote}>\r\n                            Обновить\r\n                        </button>\r\n                    </div>\r\n                </>\r\n            }\r\n\r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { AddNoteForm } from './AddNoteForm'\r\nimport { useSelector } from 'react-redux'\r\nimport { NotePage } from './NotePage';\r\nimport { selectSelected } from '../store/notes/selectors';\r\n\r\n\r\nexport const Main = () => {\r\n    const selected = useSelector(selectSelected)\r\n    const isSelected = Object.keys(selected).length !== 0\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            {!isSelected ? <AddNoteForm /> : <NotePage /> }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteItem, setSelected } from '../store/notes/actions'\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\nimport { selectSelected } from '../store/notes/selectors';\r\n\r\nexport const NoteItem = ({note}) => {\r\n    const dispatch = useDispatch()\r\n    const selected = useSelector(selectSelected)\r\n\r\n    const handleSelect = (note) => {\r\n        dispatch(setSelected(note))\r\n    }\r\n\r\n    const handleDelete = (noteId) => {\r\n        dispatch(deleteItem(noteId))\r\n    }\r\n\r\n    return (\r\n        <li \r\n            className={`${selected && selected.id === note.id ? 'noteItem active' : 'noteItem'}`}\r\n        >\r\n            <div \r\n                className=\"noteItem__name\" \r\n                onClick={() => handleSelect(note)}>{note.name}\r\n            </div> \r\n            <span \r\n                className=\"noteIcons\" \r\n                onClick={() => handleDelete(note.id)}\r\n            >\r\n                <FaTrashAlt />\r\n            </span>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectNoteItems } from '../store/notes/selectors'\r\nimport { NoteItem } from './NoteItem'\r\n\r\nexport const NoteList = () => {\r\n    const notes = useSelector(selectNoteItems)\r\n\r\n    return (\r\n        <ul className=\"noteList\">\r\n            {notes && notes.map(note => \r\n                <NoteItem\r\n                    key={note.id}\r\n                    note={note}\r\n                />\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch} from 'react-redux'\r\nimport { showAddFrom } from '../store/notes/actions'\r\nimport { IoMdAddCircleOutline } from 'react-icons/io';\r\nimport { NoteList } from './NoteList';\r\n\r\nexport const Sidebar = () => {\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"brand\"><h1>Notes</h1> <span className=\"brandIcon\" onClick={() => dispatch(showAddFrom(true))}><IoMdAddCircleOutline /></span></div>\r\n            <NoteList />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { Main } from './components/Main';\nimport { Sidebar } from './components/Sidebar';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Sidebar />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import { ADD_NOTE, DELETE_NOTE, SET_NOTES, SET_SELECTED, SHOW_ADD_FORM, SHOW_EDIT_FORM } from './actionTypes'\r\n\r\nconst initialState = {\r\n    notes: [\r\n        {id: 1, name: 'Note Title', text: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quae incidunt repellendus beatae debitis, dolorum hic nostrum quis voluptate explicabo alias illo laudantium deserunt molestiae in amet corporis commodi dignissimos! Eius!'},\r\n    ],\r\n    selected: {},\r\n    showAddForm: true,\r\n    editMode: false,\r\n}\r\n\r\nexport default function notesReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SET_NOTES: \r\n            return {\r\n                ...state,\r\n                notes: action.notes\r\n            }\r\n        case ADD_NOTE: \r\n            return {\r\n                ...state,\r\n                notes: [...state.notes, action.note],\r\n                selected: action.note\r\n            }\r\n        case SET_SELECTED: \r\n            return {\r\n                ...state,\r\n                selected: action.selected,\r\n                showAddForm: false,\r\n                editMode: false\r\n            }\r\n        case SHOW_EDIT_FORM: \r\n            return {\r\n                ...state,\r\n                editMode: action.payload\r\n            }\r\n        case SHOW_ADD_FORM: \r\n            return {\r\n                ...state,\r\n                selected: {},\r\n                showAddForm: action.payload\r\n            }\r\n\r\n        case DELETE_NOTE: \r\n            return {\r\n                ...state,\r\n                selected: {},\r\n                notes: state.notes.filter(item => item.id !== action.noteId)\r\n               \r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import { combineReducers } from 'redux'\r\nimport notesReducer from './notes/notesReducer'\r\n\r\n\r\nexport default combineReducers({\r\n    notes: notesReducer\r\n})\r\n\r\n\r\n\r\n","import { applyMiddleware, compose, createStore } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './rootReducer';\r\n\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\n\r\n\r\nexport const store = createStore(\r\n  rootReducer, \r\n  composeEnhancers(\r\n    applyMiddleware(\r\n      thunk\r\n)))\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './store/store';\nimport { Provider } from 'react-redux'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}